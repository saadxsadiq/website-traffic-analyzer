
import pandas as pd

print("üåê WEBSITE TRAFFIC ANALYZER")
print("=" * 30)

# Load the data
df = pd.read_csv('website_traffic_analysis.csv')

print(f"‚úÖ Loaded {len(df)} days of traffic data")

# Basic metrics
total_views = df['page_views'].sum()
total_visitors = df['unique_visitors'].sum()
avg_bounce_rate = df['bounce_rate'].mean()
avg_conversion = df['conversion_rate'].mean()

print(f"\nüìä TRAFFIC METRICS:")
print(f"   ‚Ä¢ Total Page Views: {total_views:,}")
print(f"   ‚Ä¢ Total Visitors: {total_visitors:,}")
print(f"   ‚Ä¢ Average Bounce Rate: {avg_bounce_rate:.1%}")
print(f"   ‚Ä¢ Average Conversion Rate: {avg_conversion:.1%}")

# Traffic sources analysis
source_performance = df.groupby('source')['page_views'].sum().sort_values(ascending=False)

print(f"\nüéØ TRAFFIC SOURCES:")
for source, views in source_performance.items():
    percentage = (views / total_views) * 100
    print(f"   ‚Ä¢ {source}: {views:,} views ({percentage:.1f}%)")

# Best performing days
df['date'] = pd.to_datetime(df['date'])
best_day = df.loc[df['page_views'].idxmax()]

print(f"\nüèÜ BEST PERFORMANCE:")
print(f"   ‚Ä¢ Best Day: {best_day['date'].strftime('%Y-%m-%d')}")
print(f"   ‚Ä¢ Views: {best_day['page_views']:,}")
print(f"   ‚Ä¢ Conversion: {best_day['conversion_rate']:.1%}")

print(f"\nüìà RECOMMENDATIONS:")
print(f"   ‚Ä¢ Focus marketing on {source_performance.index[0]} (top source)")
print(f"   ‚Ä¢ Improve bounce rate (currently {avg_bounce_rate:.1%})")
print(f"   ‚Ä¢ Optimize for conversion (currently {avg_conversion:.1%})")

print(f"\n‚úÖ Analysis Complete! Traffic insights ready.")
